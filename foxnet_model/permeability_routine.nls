; Permeability barrier checking routine.  
; Called from within fox_territory_routines.nls
; specifically; make-first-dispersal, check-for-alpha-vacancy & try-to-establish-new-territory

to test-permeable-barrier
  
  ; first test if fox is within 5x dispersal distance (or all foxes will check if the barrier is not permeable)
  ifelse [permeable-barrier-periphery] of permeable-xy-from != true
    [ set permeable-barrier-not-crossing true ]
    ; this fox is within the dispersal distance and needs to test barier.
    [
      ; hatch two permeability foxes, id them, and move them to permeable-xy-to / from patches
      hatch-permeability-foxes 1 
        [
          set link-id "a"
          move-to permeable-xy-from
        ]

      hatch-permeability-foxes 1 
        [
          set link-id "b"
          move-to permeable-xy-to    
        ]
  
      ; create link between permeable foxes
      create-links-with permeability-foxes
      set permeable-link links
    
      ; test links to cross barrier, but also if there is two barriers.
      ifelse permeable-barrier-2-exists = true
      [
      ; test if the link is crossing a permeable barrier  
      ifelse gis:intersects? permeable-barrier permeable-link or gis:intersects? permeable-barrier-2 permeable-link
        [; yes, you are crossing a barrier, test if it is the first one and test permeability proportion if true, else permeability proportion of second barrier
          ifelse gis:intersects? permeable-barrier permeable-link
            [;yes, you are crossing the first barrier, now test permeability proportion to see if you make it
              ifelse random-float 1 < propn-permeable-barrier
                [; yes, you made it across
                  ask permeability-foxes 
                    [ die ]
                 set permeable-barrier-can-cross true
                ]
              [; no sorry, you didnt make it across
                 ask permeability-foxes 
                    [ die ]
                 set permeable-barrier-can-cross false
              ]
            ]
            [;now test permeability of second barrier as you werent crossing the first one
              ifelse random-float 1 < propn-permeable-barrier-2
                [; yes, you made it across
                  ask permeability-foxes 
                    [ die ]
                 set permeable-barrier-can-cross true
                ]
              [; no sorry, you didnt make it across
                 ask permeability-foxes 
                    [ die ]
                 set permeable-barrier-can-cross false
              ]
            ]
      ]
      [
        ; this fox isn't crossing the barrier
        set permeable-barrier-not-crossing true   
        ; remove permeability foxes
        ask permeability-foxes 
          [ die ]
      ]
    ]
    [; if there is only a single barrier
      ifelse gis:intersects? permeable-barrier permeable-link
        [;yes, you are crossing the first barrier, now test permeability proportion to see if you make it
        ifelse random-float 1 < propn-permeable-barrier
          [; yes, you made it across
            ask permeability-foxes 
              [ die ]
            set permeable-barrier-can-cross true
          ]
          [; no sorry, you didnt make it across
            ask permeability-foxes 
              [ die ]
            set permeable-barrier-can-cross false
          ]    
        ]
        [
          ; this fox isn't crossing the barrier
          set permeable-barrier-not-crossing true   
          ; remove permeability foxes
          ask permeability-foxes 
            [ die ]
        ]
      ]
  ]
end